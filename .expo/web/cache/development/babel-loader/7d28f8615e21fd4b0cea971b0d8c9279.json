{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dell XPS\\\\Downloads\\\\fypfypfyp\\\\App.js\";\nimport React, { useState } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { AppLoading } from \"expo\";\nimport navigationTheme from \"./app/navigation/navigationTheme\";\nimport AppNavigator from \"./app/navigation/AppNavigator\";\nimport OfflineNotice from \"./app/components/OfflineNotice\";\nimport AuthNavigator from \"./app/navigation/AuthNavigator\";\nimport AuthContext from \"./app/auth/context\";\nimport authStorage from \"./app/auth/storage\";\nimport { navigationRef } from \"./app/navigation/rootNavigation\";\nimport logger from \"./app/utility/logger\";\nimport CustomerAppNavigator from \"./app/navigation/CustomerAppNavigator\";\nimport FakeApi from \"./app/hardcode/FakeApi\";\nimport DeliveryNavigator from \"./app/navigation/DeliveryNavigator\";\nimport StoreNavigator from \"./app/navigation/StoreNavigator\";\nimport SearchScreen from \"./app/screens/SearchScreen\";\nlogger.start();\nconsole.disableYellowBox = true;\nexport default function App() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isReady = _useState4[0],\n      setIsReady = _useState4[1];\n\n  var restoreUser = function restoreUser() {\n    var user;\n    return _regeneratorRuntime.async(function restoreUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(authStorage.getUser());\n\n          case 2:\n            user = _context.sent;\n            if (user) setUser(user);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (!isReady) return React.createElement(AppLoading, {\n    startAsync: restoreUser,\n    onFinish: function onFinish() {\n      return setIsReady(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  });\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      user: user,\n      setUser: setUser\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, React.createElement(OfflineNotice, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), React.createElement(NavigationContainer, {\n    ref: navigationRef,\n    theme: navigationTheme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, user ? React.createElement(CustomerAppNavigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }) : React.createElement(AuthNavigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 44\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/Dell XPS/Downloads/fypfypfyp/App.js"],"names":["React","useState","NavigationContainer","AppLoading","navigationTheme","AppNavigator","OfflineNotice","AuthNavigator","AuthContext","authStorage","navigationRef","logger","CustomerAppNavigator","FakeApi","DeliveryNavigator","StoreNavigator","SearchScreen","start","console","disableYellowBox","App","user","setUser","isReady","setIsReady","restoreUser","getUser"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,UAAT,QAA2B,MAA3B;AAEA,OAAOC,eAAP;AACA,OAAOC,YAAP;AACA,OAAOC,aAAP;AACA,OAAOC,aAAP;AACA,OAAOC,WAAP;AACA,OAAOC,WAAP;AACA,SAASC,aAAT;AACA,OAAOC,MAAP;AACA,OAAOC,oBAAP;AACA,OAAOC,OAAP;AACA,OAAOC,iBAAP;AACA,OAAOC,cAAP;AACA,OAAOC,YAAP;AAEAL,MAAM,CAACM,KAAP;AAEAC,OAAO,CAACC,gBAAR,GAA2B,IAA3B;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA,kBACJnB,QAAQ,EADJ;AAAA;AAAA,MACrBoB,IADqB;AAAA,MACfC,OADe;;AAAA,mBAEErB,QAAQ,CAAC,KAAD,CAFV;AAAA;AAAA,MAErBsB,OAFqB;AAAA,MAEZC,UAFY;;AAI5B,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACChB,WAAW,CAACiB,OAAZ,EADD;;AAAA;AACZL,YAAAA,IADY;AAElB,gBAAIA,IAAJ,EAAUC,OAAO,CAACD,IAAD,CAAP;;AAFQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAKA,MAAI,CAACE,OAAL,EACE,OACE,oBAAC,UAAD;AAAY,IAAA,UAAU,EAAEE,WAAxB;AAAqC,IAAA,QAAQ,EAAE;AAAA,aAAMD,UAAU,CAAC,IAAD,CAAhB;AAAA,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGF,SACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEH,MAAAA,IAAI,EAAJA,IAAF;AAAQC,MAAAA,OAAO,EAAPA;AAAR,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,mBAAD;AAAqB,IAAA,GAAG,EAAEZ,aAA1B;AAAyC,IAAA,KAAK,EAAEN,eAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGiB,IAAI,GAAG,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAA8B,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADrC,CAFF,CADF;AAQD","sourcesContent":["import React, { useState } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { AppLoading } from \"expo\";\n\nimport navigationTheme from \"./app/navigation/navigationTheme\";\nimport AppNavigator from \"./app/navigation/AppNavigator\";\nimport OfflineNotice from \"./app/components/OfflineNotice\";\nimport AuthNavigator from \"./app/navigation/AuthNavigator\";\nimport AuthContext from \"./app/auth/context\";\nimport authStorage from \"./app/auth/storage\";\nimport { navigationRef } from \"./app/navigation/rootNavigation\";\nimport logger from \"./app/utility/logger\";\nimport CustomerAppNavigator from \"./app/navigation/CustomerAppNavigator\";\nimport FakeApi from \"./app/hardcode/FakeApi\";\nimport DeliveryNavigator from \"./app/navigation/DeliveryNavigator\";\nimport StoreNavigator from \"./app/navigation/StoreNavigator\";\nimport SearchScreen from \"./app/screens/SearchScreen\";\n\nlogger.start();\n\nconsole.disableYellowBox = true;\n\nexport default function App() {\n  const [user, setUser] = useState();\n  const [isReady, setIsReady] = useState(false);\n\n  const restoreUser = async () => {\n    const user = await authStorage.getUser();\n    if (user) setUser(user);\n  };\n\n  if (!isReady)\n    return (\n      <AppLoading startAsync={restoreUser} onFinish={() => setIsReady(true)} />\n    );\n  return (\n    <AuthContext.Provider value={{ user, setUser }}>\n      <OfflineNotice />\n      <NavigationContainer ref={navigationRef} theme={navigationTheme}>\n        {user ? <CustomerAppNavigator /> : <AuthNavigator />}\n      </NavigationContainer>\n    </AuthContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}