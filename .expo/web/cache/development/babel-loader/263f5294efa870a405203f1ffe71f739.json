{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dell XPS\\\\Downloads\\\\fypfypfyp\\\\app\\\\screens\\\\RegisterScreen.js\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as Yup from \"yup\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport usersApi from \"../api/users\";\nimport authApi from \"../api/auth\";\nimport useAuth from \"../auth/useAuth\";\nimport { ErrorMessage, Form, FormField, SubmitButton } from \"../components/forms\";\nimport useApi from \"../hooks/useApi\";\nimport ActivityIndicator from \"../components/ActivityIndicator\";\nimport colors from \"../config/colors\";\nimport Screen from \"../components/Screen\";\nvar validationSchema = Yup.object().shape({\n  name: Yup.string().required().min(5).max(22).label(\"Name\"),\n  phone: Yup.string().required().min(13).max(13).label(\"Phone Number\"),\n  password: Yup.string().required().min(8).max(15).label(\"Password\"),\n  address: Yup.string().required().min(10).max(128).label(\"Address\")\n});\n\nfunction RegisterScreen() {\n  var registerApi = useApi(usersApi.register);\n  var loginApi = useApi(authApi.login);\n  var auth = useAuth();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var handleSubmit = function handleSubmit(userInfo) {\n    var result, _await$loginApi$reque, authToken;\n\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            Keyboard.dismiss();\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(registerApi.request(userInfo));\n\n          case 3:\n            result = _context.sent;\n\n            if (result.ok) {\n              _context.next = 7;\n              break;\n            }\n\n            if (result.data) setError(result.data.error);else {\n              setError(\"An unexpected error occurred.\");\n              console.log(result);\n            }\n            return _context.abrupt(\"return\");\n\n          case 7:\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(loginApi.request(userInfo.phone, userInfo.password));\n\n          case 9:\n            _await$loginApi$reque = _context.sent;\n            authToken = _await$loginApi$reque.data;\n            auth.logIn(authToken);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Screen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, React.createElement(ActivityIndicator, {\n    visible: registerApi.loading || loginApi.loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, React.createElement(Form, {\n    initialValues: {\n      name: \"\",\n      phone: \"+92\",\n      password: \"\",\n      address: \"\"\n    },\n    onSubmit: handleSubmit,\n    validationSchema: validationSchema,\n    style: styles.form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, React.createElement(ErrorMessage, {\n    error: error,\n    visible: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), React.createElement(FormField, {\n    autoCorrect: false,\n    icon: \"account\",\n    name: \"name\",\n    placeholder: \"Name\",\n    maxLength: 22,\n    style: styles.FormField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), React.createElement(FormField, {\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    icon: \"phone\",\n    keyboardType: \"number-pad\",\n    name: \"phone\",\n    placeholder: \"Phone Number\",\n    maxLength: 13,\n    style: styles.FormField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), React.createElement(FormField, {\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    icon: \"lock\",\n    name: \"password\",\n    placeholder: \"Password\",\n    secureTextEntry: true,\n    textContentType: \"password\",\n    maxLength: 15,\n    style: styles.FormField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }), React.createElement(FormField, {\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    icon: \"home-map-marker\",\n    name: \"address\",\n    placeholder: \"Address\",\n    multiline: true,\n    style: styles.FormField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }), React.createElement(SubmitButton, {\n    title: \"Register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default RegisterScreen;\nvar styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    backgroundColor: colors.white\n  },\n  FormField: {\n    marginRight: 25\n  }\n});","map":{"version":3,"sources":["C:/Users/Dell XPS/Downloads/fypfypfyp/app/screens/RegisterScreen.js"],"names":["React","useState","Yup","usersApi","authApi","useAuth","ErrorMessage","Form","FormField","SubmitButton","useApi","ActivityIndicator","colors","Screen","validationSchema","object","shape","name","string","required","min","max","label","phone","password","address","RegisterScreen","registerApi","register","loginApi","login","auth","error","setError","handleSubmit","userInfo","Keyboard","dismiss","request","result","ok","data","console","log","authToken","logIn","loading","styles","container","form","StyleSheet","create","padding","backgroundColor","white","marginRight"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport * as Yup from \"yup\";\nimport { Keyboard } from \"react-native\";\n\nimport usersApi from \"../api/users\";\nimport authApi from \"../api/auth\";\nimport useAuth from \"../auth/useAuth\";\nimport {\n  ErrorMessage,\n  Form,\n  FormField,\n  SubmitButton,\n} from \"../components/forms\";\nimport useApi from \"../hooks/useApi\";\nimport ActivityIndicator from \"../components/ActivityIndicator\";\nimport colors from \"../config/colors\";\nimport Screen from \"../components/Screen\";\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string().required().min(5).max(22).label(\"Name\"),\n  phone: Yup.string().required().min(13).max(13).label(\"Phone Number\"),\n  password: Yup.string().required().min(8).max(15).label(\"Password\"),\n  address: Yup.string().required().min(10).max(128).label(\"Address\"),\n});\n\nfunction RegisterScreen() {\n  const registerApi = useApi(usersApi.register);\n  const loginApi = useApi(authApi.login);\n  const auth = useAuth();\n  const [error, setError] = useState();\n\n  const handleSubmit = async (userInfo) => {\n    Keyboard.dismiss();\n    const result = await registerApi.request(userInfo);\n\n    if (!result.ok) {\n      if (result.data) setError(result.data.error);\n      else {\n        setError(\"An unexpected error occurred.\");\n        console.log(result);\n      }\n      return;\n    }\n\n    const { data: authToken } = await loginApi.request(\n      userInfo.phone,\n      userInfo.password\n    );\n    auth.logIn(authToken);\n  };\n\n  return (\n    <>\n      <Screen>\n        <ActivityIndicator visible={registerApi.loading || loginApi.loading} />\n        <View style={styles.container}>\n          <Form\n            initialValues={{\n              name: \"\",\n              phone: \"+92\",\n              password: \"\",\n              address: \"\",\n            }}\n            onSubmit={handleSubmit}\n            validationSchema={validationSchema}\n            style={styles.form}\n          >\n            <ErrorMessage error={error} visible={error} />\n            <FormField\n              autoCorrect={false}\n              icon=\"account\"\n              name=\"name\"\n              placeholder=\"Name\"\n              maxLength={22}\n              style={styles.FormField}\n            />\n            <FormField\n              autoCapitalize=\"none\"\n              autoCorrect={false}\n              icon=\"phone\"\n              keyboardType=\"number-pad\"\n              name=\"phone\"\n              placeholder=\"Phone Number\"\n              maxLength={13}\n              style={styles.FormField}\n            />\n            <FormField\n              autoCapitalize=\"none\"\n              autoCorrect={false}\n              icon=\"lock\"\n              name=\"password\"\n              placeholder=\"Password\"\n              secureTextEntry\n              textContentType=\"password\"\n              maxLength={15}\n              style={styles.FormField}\n            />\n            <FormField\n              autoCapitalize=\"none\"\n              autoCorrect={false}\n              icon=\"home-map-marker\"\n              name=\"address\"\n              placeholder=\"Address\"\n              multiline={true}\n              style={styles.FormField}\n            />\n            <SubmitButton title=\"Register\" />\n          </Form>\n        </View>\n      </Screen>\n    </>\n  );\n}\n\nexport default RegisterScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    backgroundColor: colors.white,\n  },\n  FormField: {\n    marginRight: 25,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}