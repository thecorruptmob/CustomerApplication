{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dell XPS\\\\Downloads\\\\fypfypfyp\\\\app\\\\screens\\\\MyOrdersScreen.js\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport tasksApi from \"../api/tasks\";\nimport colors from \"../config/colors\";\nimport routes from \"../navigation/routes\";\nimport navigation from \"../navigation/rootNavigation\";\nimport authStorage from \"../auth/storage\";\nimport Screen from \"../components/Screen\";\nimport io from \"socket.io-client\";\nimport OrderDetailsCard from \"../components/OrderDetailsCard\";\nvar socket = io(\"https://evening-beach-81187.herokuapp.com/apis/order/socket\");\n\nfunction MyOrdersScreen() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var data = [];\n  socket.on(\"orderUpdate\", function (orderUpdate) {\n    console.log(\"Hello\", orderUpdate);\n    data.push(orderUpdate);\n  });\n  var getTasksApi = useApi(tasksApi.getTasks);\n  data = getTasksApi.data;\n  useEffect(function () {\n    getTasksApi.request();\n  }, []);\n\n  var restoreUser = function restoreUser() {\n    var user;\n    return _regeneratorRuntime.async(function restoreUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(authStorage.getUser());\n\n          case 2:\n            user = _context.sent;\n            if (user) setUser(user);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    restoreUser();\n  }, []);\n  var filtered = data.filter(function (m) {\n    return m.customer._id === user._id;\n  });\n  return React.createElement(Screen, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    showsVerticalScrollIndicator: false,\n    data: filtered,\n    keyExtractor: function keyExtractor(tasks) {\n      return tasks._id.toString();\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.wrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, React.createElement(OrderDetailsCard, {\n        customerAddress: item.customer.address,\n        orderTime: item.ordertime,\n        status: item.status,\n        total: item.total,\n        onPress: function onPress() {\n          return navigation.navigate(routes.TASK_DETAILS, item.orderitems);\n        },\n        inverted: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default MyOrdersScreen;\nvar styles = StyleSheet.create({\n  wrapper: {\n    backgroundColor: colors.white,\n    marginVertical: 5,\n    marginHorizontal: 10\n  },\n  container: {\n    flex: 1,\n    backgroundColor: colors.background\n  }\n});","map":{"version":3,"sources":["C:/Users/Dell XPS/Downloads/fypfypfyp/app/screens/MyOrdersScreen.js"],"names":["React","useState","useEffect","tasksApi","colors","routes","navigation","authStorage","Screen","io","OrderDetailsCard","socket","MyOrdersScreen","user","setUser","data","on","orderUpdate","console","log","push","getTasksApi","useApi","getTasks","request","restoreUser","getUser","filtered","filter","m","customer","_id","styles","container","tasks","toString","item","wrapper","address","ordertime","status","total","navigate","TASK_DETAILS","orderitems","StyleSheet","create","backgroundColor","white","marginVertical","marginHorizontal","flex","background"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { View, StyleSheet, FlatList } from \"react-native\";\r\n\r\nimport tasksApi from \"../api/tasks\";\r\nimport colors from \"../config/colors\";\r\nimport routes from \"../navigation/routes\";\r\nimport navigation from \"../navigation/rootNavigation\";\r\nimport authStorage from \"../auth/storage\";\r\nimport Screen from \"../components/Screen\";\r\n\r\nimport io from \"socket.io-client\";\r\nimport OrderDetailsCard from \"../components/OrderDetailsCard\";\r\n\r\nconst socket = io(\r\n  \"https://evening-beach-81187.herokuapp.com/apis/order/socket\"\r\n);\r\nfunction MyOrdersScreen() {\r\n  const [user, setUser] = useState();\r\n\r\n  var data = [];\r\n  socket.on(\"orderUpdate\", (orderUpdate) => {\r\n    console.log(\"Hello\", orderUpdate);\r\n    data.push(orderUpdate);\r\n  });\r\n  const getTasksApi = useApi(tasksApi.getTasks);\r\n  data = getTasksApi.data;\r\n  useEffect(() => {\r\n    getTasksApi.request();\r\n  }, []);\r\n\r\n  const restoreUser = async () => {\r\n    const user = await authStorage.getUser();\r\n    if (user) setUser(user);\r\n  };\r\n\r\n  useEffect(() => {\r\n    restoreUser();\r\n  }, []);\r\n\r\n  const filtered = data.filter((m) => m.customer._id === user._id);\r\n  return (\r\n    <Screen style={styles.container}>\r\n      <FlatList\r\n        showsVerticalScrollIndicator={false}\r\n        data={filtered}\r\n        keyExtractor={(tasks) => tasks._id.toString()}\r\n        renderItem={({ item }) => (\r\n          <View style={styles.wrapper}>\r\n            <OrderDetailsCard\r\n              //customerLocation={item.customer.location}\r\n              customerAddress={item.customer.address}\r\n              orderTime={item.ordertime}\r\n              status={item.status}\r\n              total={item.total}\r\n              onPress={() =>\r\n                navigation.navigate(routes.TASK_DETAILS, item.orderitems)\r\n              }\r\n              inverted\r\n            />\r\n          </View>\r\n        )}\r\n      />\r\n    </Screen>\r\n  );\r\n}\r\n\r\nexport default MyOrdersScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  wrapper: {\r\n    backgroundColor: colors.white,\r\n    marginVertical: 5,\r\n    marginHorizontal: 10,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: colors.background,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}