{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dell XPS\\\\Downloads\\\\fypfypfyp\\\\app\\\\screens\\\\AddAddressScreen.js\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport * as Yup from \"yup\";\nimport colors from \"../config/colors\";\nimport routes from \"../navigation/routes\";\nimport navigation from \"../navigation/rootNavigation\";\nimport { Form, FormField, SubmitButton } from \"../components/forms\";\nimport Screen from \"../components/Screen\";\nvar validationSchema = Yup.object().shape({\n  house: Yup.string().required().min(5).max(30).label(\"House\"),\n  area: Yup.string().required().min(5).max(30).label(\"Area\"),\n  city: Yup.string().required().min(5).max(30).label(\"City\")\n});\n\nfunction AddAddressScreen(_ref) {\n  var route = _ref.route;\n  var cart = route.params;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      address = _useState2[0],\n      setAddress = _useState2[1];\n\n  var handleSubmit = function handleSubmit(addressInfo) {\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setAddress(addressInfo);\n            Alert.alert(\"\", \"Address saved!\");\n            navigation.navigate(routes.PAYMENT, cart, address);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Screen, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, React.createElement(Form, {\n    initialValues: {\n      house: \"\",\n      area: \"\",\n      city: \"\"\n    },\n    onSubmit: handleSubmit,\n    validationSchema: validationSchema,\n    style: styles.form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, React.createElement(FormField, {\n    autoCorrect: false,\n    icon: \"account\",\n    name: \"house\",\n    placeholder: \"Flat, House, Office, Building or Company\",\n    maxLength: 30,\n    style: styles.FormField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }), React.createElement(FormField, {\n    autoCorrect: false,\n    icon: \"account\",\n    name: \"area\",\n    placeholder: \"Area, Colony, Sector or Street\",\n    maxLength: 30,\n    style: styles.FormField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), React.createElement(FormField, {\n    autoCorrect: false,\n    icon: \"account\",\n    name: \"city\",\n    placeholder: \"City\",\n    maxLength: 30,\n    style: styles.FormField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), React.createElement(SubmitButton, {\n    title: \"ADD ADDRESS\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default AddAddressScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.background\n  },\n  wrapper: {\n    backgroundColor: colors.white\n  }\n});","map":{"version":3,"sources":["C:/Users/Dell XPS/Downloads/fypfypfyp/app/screens/AddAddressScreen.js"],"names":["React","useState","Yup","colors","routes","navigation","Form","FormField","SubmitButton","Screen","validationSchema","object","shape","house","string","required","min","max","label","area","city","AddAddressScreen","route","cart","params","address","setAddress","handleSubmit","addressInfo","Alert","alert","navigate","PAYMENT","styles","container","wrapper","form","StyleSheet","create","flex","backgroundColor","background","white"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, StyleSheet, Alert } from \"react-native\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport colors from \"../config/colors\";\r\nimport routes from \"../navigation/routes\";\r\nimport navigation from \"../navigation/rootNavigation\";\r\nimport { Form, FormField, SubmitButton } from \"../components/forms\";\r\nimport Screen from \"../components/Screen\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  house: Yup.string().required().min(5).max(30).label(\"House\"),\r\n  area: Yup.string().required().min(5).max(30).label(\"Area\"),\r\n  city: Yup.string().required().min(5).max(30).label(\"City\"),\r\n});\r\n\r\nfunction AddAddressScreen({ route }) {\r\n  const cart = route.params;\r\n  const [address, setAddress] = useState();\r\n\r\n  const handleSubmit = async (addressInfo) => {\r\n    setAddress(addressInfo);\r\n    Alert.alert(\"\", \"Address saved!\");\r\n    navigation.navigate(routes.PAYMENT, cart, address);\r\n  };\r\n\r\n  return (\r\n    <Screen style={styles.container}>\r\n      <View style={styles.wrapper}>\r\n        <Form\r\n          initialValues={{\r\n            house: \"\",\r\n            area: \"\",\r\n            city: \"\",\r\n          }}\r\n          onSubmit={handleSubmit}\r\n          validationSchema={validationSchema}\r\n          style={styles.form}\r\n        >\r\n          <FormField\r\n            autoCorrect={false}\r\n            icon=\"account\"\r\n            name=\"house\"\r\n            placeholder=\"Flat, House, Office, Building or Company\"\r\n            maxLength={30}\r\n            style={styles.FormField}\r\n          />\r\n          <FormField\r\n            autoCorrect={false}\r\n            icon=\"account\"\r\n            name=\"area\"\r\n            placeholder=\"Area, Colony, Sector or Street\"\r\n            maxLength={30}\r\n            style={styles.FormField}\r\n          />\r\n          <FormField\r\n            autoCorrect={false}\r\n            icon=\"account\"\r\n            name=\"city\"\r\n            placeholder=\"City\"\r\n            maxLength={30}\r\n            style={styles.FormField}\r\n          />\r\n          <SubmitButton title=\"ADD ADDRESS\" />\r\n        </Form>\r\n      </View>\r\n    </Screen>\r\n  );\r\n}\r\n\r\nexport default AddAddressScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: colors.background,\r\n  },\r\n  wrapper: {\r\n    backgroundColor: colors.white,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}