{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dell XPS\\\\Downloads\\\\fypfypfyp\\\\app\\\\screens\\\\CashOnDeliveryScreen.js\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport colors from \"../config/colors\";\nimport routes from \"../navigation/routes\";\nimport navigation from \"../navigation/rootNavigation\";\nimport ListButtonCartItem from \"../components/lists/ListButtonCartItem\";\nimport Text from \"../components/Text\";\nimport hardcodeCart from \"../hardcode/hardcodeCart\";\nimport useAuth from \"../auth/useAuth\";\nimport useLocation from \"../hooks/useLocation\";\nimport orderApi from \"../api/order\";\nimport UploadScreen from \"./UploadScreen\";\nimport Screen from \"../components/Screen\";\n\nfunction CashOnDeliveryScreen() {\n  var dummyLocation = [{\n    lat: 1.23456789\n  }, {\n    long: 2.34567891\n  }];\n\n  var _useAuth = useAuth(),\n      user = _useAuth.user;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      products = _useState2[0],\n      setProducts = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      amount = _useState4[0],\n      setAmount = _useState4[1];\n\n  useEffect(function () {\n    hardcodeCart.getData().then(function (json) {\n      setProducts(json);\n    }).catch(function (error) {\n      return alert(error);\n    });\n  }, []);\n  useEffect(function () {\n    hardcodeCart.getTotalAmount().then(function (json) {\n      setAmount(json);\n    }).catch(function (error) {\n      return alert(error);\n    });\n  }, []);\n  var customer = {\n    _id: user._id,\n    name: user.name,\n    phone: user.phone,\n    address: \"My home address\",\n    location: {\n      lat: \"31.58081224441275\",\n      long: \"74.38214250066633\"\n    }\n  };\n  var finalInfo = {\n    customer: customer,\n    orderitems: products,\n    total: amount\n  };\n  var placeOrderApi = useApi(orderApi.postOrder);\n\n  var onButtonPress = function onButtonPress(finalInfo) {\n    var result;\n    return _regeneratorRuntime.async(function onButtonPress$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(placeOrderApi.request(finalInfo));\n\n          case 2:\n            result = _context.sent;\n\n            if (result.ok) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\", alert(\"Could not save the listing\"));\n\n          case 5:\n            console.log(result.data._id);\n            navigation.navigate(routes.SUCCESSFUL_ORDER, result.data);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Screen, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Kindly pay amount to the delivery executive.\")), React.createElement(View, {\n    style: styles.listContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, React.createElement(ListButtonCartItem, {\n    title: \"Place Order\",\n    onPress: function onPress() {\n      return onButtonPress(finalInfo);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default CashOnDeliveryScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.background\n  },\n  text: {\n    color: colors.medium,\n    fontSize: 12\n  },\n  wrapper: {\n    flex: 1,\n    backgroundColor: colors.white,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Dell XPS/Downloads/fypfypfyp/app/screens/CashOnDeliveryScreen.js"],"names":["React","useState","useEffect","colors","routes","navigation","ListButtonCartItem","Text","hardcodeCart","useAuth","useLocation","orderApi","UploadScreen","Screen","CashOnDeliveryScreen","dummyLocation","lat","long","user","products","setProducts","amount","setAmount","getData","then","json","catch","error","alert","getTotalAmount","customer","_id","name","phone","address","location","finalInfo","orderitems","total","placeOrderApi","useApi","postOrder","onButtonPress","request","result","ok","console","log","data","navigate","SUCCESSFUL_ORDER","styles","container","wrapper","text","listContainer","StyleSheet","create","flex","backgroundColor","background","color","medium","fontSize","white","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { View, StyleSheet } from \"react-native\";\r\n\r\nimport colors from \"../config/colors\";\r\nimport routes from \"../navigation/routes\";\r\nimport navigation from \"../navigation/rootNavigation\";\r\nimport ListButtonCartItem from \"../components/lists/ListButtonCartItem\";\r\nimport Text from \"../components/Text\";\r\nimport hardcodeCart from \"../hardcode/hardcodeCart\";\r\nimport useAuth from \"../auth/useAuth\";\r\nimport useLocation from \"../hooks/useLocation\";\r\nimport orderApi from \"../api/order\";\r\nimport UploadScreen from \"./UploadScreen\";\r\nimport Screen from \"../components/Screen\";\r\n\r\nfunction CashOnDeliveryScreen() {\r\n  /*  const location = useLocation();\r\n  console.log(\"Location Info:\", location); */\r\n  const dummyLocation = [{ lat: 1.23456789 }, { long: 2.34567891 }];\r\n  const { user } = useAuth();\r\n\r\n  const [products, setProducts] = useState([]);\r\n  const [amount, setAmount] = useState();\r\n  useEffect(() => {\r\n    hardcodeCart\r\n      .getData()\r\n      .then((json) => {\r\n        setProducts(json);\r\n      })\r\n      .catch((error) => alert(error));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    hardcodeCart\r\n      .getTotalAmount()\r\n      .then((json) => {\r\n        setAmount(json);\r\n      })\r\n      .catch((error) => alert(error));\r\n  }, []);\r\n\r\n  const customer = {\r\n    _id: user._id,\r\n    name: user.name,\r\n    phone: user.phone,\r\n    address: \"My home address\",\r\n    location: {\r\n      lat: \"31.58081224441275\",\r\n      long: \"74.38214250066633\",\r\n    },\r\n  };\r\n  const finalInfo = {\r\n    customer: customer,\r\n    orderitems: products,\r\n    total: amount,\r\n  };\r\n\r\n  const placeOrderApi = useApi(orderApi.postOrder);\r\n\r\n  const onButtonPress = async (finalInfo) => {\r\n    const result = await placeOrderApi.request(finalInfo);\r\n\r\n    if (!result.ok) {\r\n      return alert(\"Could not save the listing\");\r\n    }\r\n\r\n    console.log(result.data._id);\r\n    navigation.navigate(routes.SUCCESSFUL_ORDER, result.data);\r\n  };\r\n\r\n  return (\r\n    <Screen style={styles.container}>\r\n      <View style={styles.wrapper}>\r\n        <Text style={styles.text}>\r\n          Kindly pay amount to the delivery executive.\r\n        </Text>\r\n      </View>\r\n\r\n      <View style={styles.listContainer}>\r\n        <ListButtonCartItem\r\n          title=\"Place Order\"\r\n          onPress={() => onButtonPress(finalInfo)}\r\n        />\r\n      </View>\r\n    </Screen>\r\n  );\r\n}\r\n\r\nexport default CashOnDeliveryScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: colors.background,\r\n  },\r\n  text: {\r\n    color: colors.medium,\r\n    fontSize: 12,\r\n  },\r\n  wrapper: {\r\n    flex: 1,\r\n    backgroundColor: colors.white,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}