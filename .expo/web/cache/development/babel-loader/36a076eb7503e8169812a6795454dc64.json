{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dell XPS\\\\Downloads\\\\fypfypfyp\\\\app\\\\screens\\\\ListingEditScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as Yup from \"yup\";\nimport { Form, FormField, FormPicker as Picker, SubmitButton } from \"../components/forms\";\nimport CategoryPickerItem from \"../components/CategoryPickerItem\";\nimport Screen from \"../components/Screen\";\nimport FormImagePicker from \"../components/forms/FormImagePicker\";\nimport listingsApi from \"../api/listings\";\nimport useLocation from \"../hooks/useLocation\";\nimport UploadScreen from \"./UploadScreen\";\nvar validationSchema = Yup.object().shape({\n  title: Yup.string().required().min(1).label(\"Title\"),\n  price: Yup.number().required().min(1).max(10000).label(\"Price\"),\n  description: Yup.string().label(\"Description\"),\n  category: Yup.object().required().nullable().label(\"Category\"),\n  images: Yup.array().min(1, \"Please select at least one image.\")\n});\nvar categories = [{\n  backgroundColor: \"#fc5c65\",\n  icon: \"floor-lamp\",\n  label: \"Furniture\",\n  value: 1\n}, {\n  backgroundColor: \"#fd9644\",\n  icon: \"car\",\n  label: \"Cars\",\n  value: 2\n}, {\n  backgroundColor: \"#fed330\",\n  icon: \"camera\",\n  label: \"Cameras\",\n  value: 3\n}, {\n  backgroundColor: \"#26de81\",\n  icon: \"cards\",\n  label: \"Games\",\n  value: 4\n}, {\n  backgroundColor: \"#2bcbba\",\n  icon: \"shoe-heel\",\n  label: \"Clothing\",\n  value: 5\n}, {\n  backgroundColor: \"#45aaf2\",\n  icon: \"basketball\",\n  label: \"Sports\",\n  value: 6\n}, {\n  backgroundColor: \"#4b7bec\",\n  icon: \"headphones\",\n  label: \"Movies & Music\",\n  value: 7\n}, {\n  backgroundColor: \"#a55eea\",\n  icon: \"book-open-variant\",\n  label: \"Books\",\n  value: 8\n}, {\n  backgroundColor: \"#778ca3\",\n  icon: \"application\",\n  label: \"Other\",\n  value: 9\n}];\n\nfunction ListingEditScreen() {\n  var location = useLocation();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      uploadVisible = _useState2[0],\n      setUploadVisible = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      progress = _useState4[0],\n      setProgress = _useState4[1];\n\n  var handleSubmit = function handleSubmit(listing, _ref) {\n    var resetForm, result;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            resetForm = _ref.resetForm;\n            setProgress(0);\n            setUploadVisible(true);\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(listingsApi.addListing(_objectSpread({}, listing, {\n              location: location\n            }), function (progress) {\n              return setProgress(progress);\n            }));\n\n          case 5:\n            result = _context.sent;\n\n            if (result.ok) {\n              _context.next = 9;\n              break;\n            }\n\n            setUploadVisible(false);\n            return _context.abrupt(\"return\", alert(\"Could not save the listing\"));\n\n          case 9:\n            resetForm();\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Screen, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, React.createElement(UploadScreen, {\n    onDone: function onDone() {\n      return setUploadVisible(false);\n    },\n    progress: progress,\n    visible: uploadVisible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }), React.createElement(Form, {\n    initialValues: {\n      title: \"\",\n      price: \"\",\n      description: \"\",\n      category: null,\n      images: []\n    },\n    onSubmit: handleSubmit,\n    validationSchema: validationSchema,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, React.createElement(FormImagePicker, {\n    name: \"images\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }), React.createElement(FormField, {\n    maxLength: 255,\n    name: \"title\",\n    placeholder: \"Title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }), React.createElement(FormField, {\n    keyboardType: \"numeric\",\n    maxLength: 8,\n    name: \"price\",\n    placeholder: \"Price\",\n    width: 120,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }), React.createElement(Picker, {\n    items: categories,\n    name: \"category\",\n    numberOfColumns: 3,\n    PickerItemComponent: CategoryPickerItem,\n    placeholder: \"Category\",\n    width: \"50%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }), React.createElement(FormField, {\n    maxLength: 255,\n    multiline: true,\n    name: \"description\",\n    numberOfLines: 3,\n    placeholder: \"Description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }), React.createElement(SubmitButton, {\n    title: \"Post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default ListingEditScreen;\nvar styles = StyleSheet.create({\n  container: {\n    padding: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/Dell XPS/Downloads/fypfypfyp/app/screens/ListingEditScreen.js"],"names":["React","useState","Yup","Form","FormField","FormPicker","Picker","SubmitButton","CategoryPickerItem","Screen","FormImagePicker","listingsApi","useLocation","UploadScreen","validationSchema","object","shape","title","string","required","min","label","price","number","max","description","category","nullable","images","array","categories","backgroundColor","icon","value","ListingEditScreen","location","uploadVisible","setUploadVisible","progress","setProgress","handleSubmit","listing","resetForm","addListing","result","ok","alert","styles","container","StyleSheet","create","padding"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport * as Yup from \"yup\";\n\nimport {\n  Form,\n  FormField,\n  FormPicker as Picker,\n  SubmitButton,\n} from \"../components/forms\";\nimport CategoryPickerItem from \"../components/CategoryPickerItem\";\nimport Screen from \"../components/Screen\";\nimport FormImagePicker from \"../components/forms/FormImagePicker\";\nimport listingsApi from \"../api/listings\";\nimport useLocation from \"../hooks/useLocation\";\nimport UploadScreen from \"./UploadScreen\";\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required().min(1).label(\"Title\"),\n  price: Yup.number().required().min(1).max(10000).label(\"Price\"),\n  description: Yup.string().label(\"Description\"),\n  category: Yup.object().required().nullable().label(\"Category\"),\n  images: Yup.array().min(1, \"Please select at least one image.\"),\n});\n\nconst categories = [\n  {\n    backgroundColor: \"#fc5c65\",\n    icon: \"floor-lamp\",\n    label: \"Furniture\",\n    value: 1,\n  },\n  {\n    backgroundColor: \"#fd9644\",\n    icon: \"car\",\n    label: \"Cars\",\n    value: 2,\n  },\n  {\n    backgroundColor: \"#fed330\",\n    icon: \"camera\",\n    label: \"Cameras\",\n    value: 3,\n  },\n  {\n    backgroundColor: \"#26de81\",\n    icon: \"cards\",\n    label: \"Games\",\n    value: 4,\n  },\n  {\n    backgroundColor: \"#2bcbba\",\n    icon: \"shoe-heel\",\n    label: \"Clothing\",\n    value: 5,\n  },\n  {\n    backgroundColor: \"#45aaf2\",\n    icon: \"basketball\",\n    label: \"Sports\",\n    value: 6,\n  },\n  {\n    backgroundColor: \"#4b7bec\",\n    icon: \"headphones\",\n    label: \"Movies & Music\",\n    value: 7,\n  },\n  {\n    backgroundColor: \"#a55eea\",\n    icon: \"book-open-variant\",\n    label: \"Books\",\n    value: 8,\n  },\n  {\n    backgroundColor: \"#778ca3\",\n    icon: \"application\",\n    label: \"Other\",\n    value: 9,\n  },\n];\n\nfunction ListingEditScreen() {\n  const location = useLocation();\n  const [uploadVisible, setUploadVisible] = useState(false);\n  const [progress, setProgress] = useState(0);\n\n  const handleSubmit = async (listing, { resetForm }) => {\n    setProgress(0);\n    setUploadVisible(true);\n    const result = await listingsApi.addListing(\n      { ...listing, location },\n      (progress) => setProgress(progress)\n    );\n\n    if (!result.ok) {\n      setUploadVisible(false);\n      return alert(\"Could not save the listing\");\n    }\n\n    resetForm();\n  };\n\n  return (\n    <Screen style={styles.container}>\n      <UploadScreen\n        onDone={() => setUploadVisible(false)}\n        progress={progress}\n        visible={uploadVisible}\n      />\n      <Form\n        initialValues={{\n          title: \"\",\n          price: \"\",\n          description: \"\",\n          category: null,\n          images: [],\n        }}\n        onSubmit={handleSubmit}\n        validationSchema={validationSchema}\n      >\n        <FormImagePicker name=\"images\" />\n        <FormField maxLength={255} name=\"title\" placeholder=\"Title\" />\n        <FormField\n          keyboardType=\"numeric\"\n          maxLength={8}\n          name=\"price\"\n          placeholder=\"Price\"\n          width={120}\n        />\n        <Picker\n          items={categories}\n          name=\"category\"\n          numberOfColumns={3}\n          PickerItemComponent={CategoryPickerItem}\n          placeholder=\"Category\"\n          width=\"50%\"\n        />\n        <FormField\n          maxLength={255}\n          multiline\n          name=\"description\"\n          numberOfLines={3}\n          placeholder=\"Description\"\n        />\n        <SubmitButton title=\"Post\" />\n      </Form>\n    </Screen>\n  );\n}\n\nexport default ListingEditScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}