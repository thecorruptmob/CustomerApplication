{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dell XPS\\\\Downloads\\\\fypfypfyp\\\\app\\\\screens\\\\CartScreen.js\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport CartItemCard from \"../components/CartItemCard\";\nimport colors from \"../config/colors\";\nimport ListButtonCartItem from \"../components/lists/ListButtonCartItem\";\nimport ListCartItem from \"../components/lists/ListCartItem\";\nimport routes from \"../navigation/routes\";\nimport navigation from \"../navigation/rootNavigation\";\nimport hardcodeCart from \"../hardcode/hardcodeCart\";\nimport Screen from \"../components/Screen\";\n\nfunction CartScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      products = _useState2[0],\n      setProducts = _useState2[1];\n\n  useEffect(function () {\n    hardcodeCart.getData().then(function (json) {\n      setProducts(json);\n      console.log(products);\n    }).catch(function (error) {\n      return alert(error);\n    });\n  }, []);\n  var totalQuantity = 0;\n  var totalPrice = 0;\n\n  if (products) {\n    products.forEach(function (item) {\n      totalQuantity += item.quantity;\n    });\n    products.forEach(function (item) {\n      totalPrice += item.quantity * item.price;\n    });\n  }\n\n  onAdd = function onAdd(item) {\n    var productsNow = _toConsumableArray(products);\n\n    console.log(productsNow);\n    var idx = productsNow.indexOf(item);\n    productsNow[idx].quantity += 1;\n    setProducts(productsNow);\n    var jsonArray = JSON.stringify(productsNow);\n    hardcodeCart.changeInCart(idx, productsNow[idx]);\n    hardcodeCart.storeData(jsonArray);\n  };\n\n  onSub = function onSub(item) {\n    var productsNow = _toConsumableArray(products);\n\n    console.log(productsNow);\n    var idx = productsNow.indexOf(item);\n\n    if (productsNow[idx].quantity > 1) {\n      productsNow[idx].quantity -= 1;\n      setProducts(productsNow);\n    } else {\n      setProducts(productsNow);\n    }\n\n    var jsonArray = JSON.stringify(productsNow);\n    hardcodeCart.changeInCart(idx, productsNow[idx]);\n    hardcodeCart.storeData(jsonArray);\n  };\n\n  onDel = function onDel(item) {\n    var productsNow = _toConsumableArray(products);\n\n    var idx = productsNow.indexOf(item);\n    productsNow.splice(idx, 1);\n    setProducts(productsNow);\n    var jsonArray = JSON.stringify(productsNow);\n    hardcodeCart.deleteCartItem(idx, jsonArray);\n  };\n\n  onButtonPress = function onButtonPress(products) {\n    if (products) {\n      if (products.length > 0) {\n        console.log(products);\n        navigation.navigate(routes.PAYMENT, products);\n      } else {\n        Alert.alert(\"OOPS!\", \"Cart is currently empty.\", [{\n          text: \"Continue Shopping\",\n          onPress: function onPress() {\n            return navigation.navigate(routes.CATEGORIES);\n          }\n        }]);\n      }\n    } else {\n      Alert.alert(\"Sorry!\", \"Cart is currently empty.\", [{\n        text: \"Continue Shopping\",\n        onPress: function onPress() {\n          return navigation.navigate(routes.CATEGORIES);\n        }\n      }]);\n    }\n  };\n\n  return React.createElement(Screen, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    showsVerticalScrollIndicator: false,\n    data: products,\n    keyExtractor: function keyExtractor(products) {\n      return products._id;\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(CartItemCard, {\n        title: item.productName,\n        subTitle: \"$\" + item.price,\n        type: item.type,\n        imageUrl: require(\"../assets/icon.png\"),\n        quantity: item.quantity,\n        onImagePress: function onImagePress() {\n          return navigation.navigate(routes.CART_DETAILS, item);\n        },\n        onDel: function (_onDel) {\n          function onDel() {\n            return _onDel.apply(this, arguments);\n          }\n\n          onDel.toString = function () {\n            return _onDel.toString();\n          };\n\n          return onDel;\n        }(function () {\n          return onDel(item);\n        }),\n        onAdd: function (_onAdd) {\n          function onAdd() {\n            return _onAdd.apply(this, arguments);\n          }\n\n          onAdd.toString = function () {\n            return _onAdd.toString();\n          };\n\n          return onAdd;\n        }(function () {\n          return onAdd(item);\n        }),\n        onSub: function (_onSub) {\n          function onSub() {\n            return _onSub.apply(this, arguments);\n          }\n\n          onSub.toString = function () {\n            return _onSub.toString();\n          };\n\n          return onSub;\n        }(function () {\n          return onSub(item);\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.listContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, React.createElement(ListCartItem, {\n    title: totalQuantity + \" goods\",\n    subTitle: \"Total $\" + totalPrice,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }), React.createElement(ListButtonCartItem, {\n    title: \"Check Out\",\n    onPress: function onPress() {\n      return onButtonPress(products);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default CartScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.background\n  },\n  listContainer: {\n    zIndex: 1,\n    position: \"absolute\",\n    bottom: 0\n  },\n  wrapper: {\n    backgroundColor: colors.white,\n    marginBottom: 120\n  }\n});","map":{"version":3,"sources":["C:/Users/Dell XPS/Downloads/fypfypfyp/app/screens/CartScreen.js"],"names":["React","useState","useEffect","CartItemCard","colors","ListButtonCartItem","ListCartItem","routes","navigation","hardcodeCart","Screen","CartScreen","products","setProducts","getData","then","json","console","log","catch","error","alert","totalQuantity","totalPrice","forEach","item","quantity","price","onAdd","productsNow","idx","indexOf","jsonArray","JSON","stringify","changeInCart","storeData","onSub","onDel","splice","deleteCartItem","onButtonPress","length","navigate","PAYMENT","Alert","text","onPress","CATEGORIES","styles","container","wrapper","_id","productName","type","require","CART_DETAILS","listContainer","StyleSheet","create","flex","backgroundColor","background","zIndex","position","bottom","white","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { StyleSheet, View, FlatList, Alert } from \"react-native\";\r\n\r\nimport CartItemCard from \"../components/CartItemCard\";\r\nimport colors from \"../config/colors\";\r\nimport ListButtonCartItem from \"../components/lists/ListButtonCartItem\";\r\nimport ListCartItem from \"../components/lists/ListCartItem\";\r\nimport routes from \"../navigation/routes\";\r\nimport navigation from \"../navigation/rootNavigation\";\r\nimport hardcodeCart from \"../hardcode/hardcodeCart\";\r\nimport Screen from \"../components/Screen\";\r\n\r\nfunction CartScreen() {\r\n  const [products, setProducts] = useState([]);\r\n\r\n  // pull\r\n  useEffect(() => {\r\n    hardcodeCart\r\n      .getData()\r\n      .then((json) => {\r\n        setProducts(json);\r\n\r\n        console.log(products);\r\n      })\r\n      .catch((error) => alert(error));\r\n  }, []);\r\n\r\n  let totalQuantity = 0;\r\n  let totalPrice = 0;\r\n\r\n  if (products) {\r\n    products.forEach((item) => {\r\n      totalQuantity += item.quantity;\r\n    });\r\n\r\n    products.forEach((item) => {\r\n      totalPrice += item.quantity * item.price;\r\n    });\r\n  }\r\n\r\n  onAdd = (item) => {\r\n    const productsNow = [...products];\r\n    console.log(productsNow);\r\n    var idx = productsNow.indexOf(item);\r\n    productsNow[idx].quantity += 1;\r\n    setProducts(productsNow);\r\n    const jsonArray = JSON.stringify(productsNow);\r\n    hardcodeCart.changeInCart(idx, productsNow[idx]);\r\n    hardcodeCart.storeData(jsonArray);\r\n  };\r\n\r\n  onSub = (item) => {\r\n    const productsNow = [...products];\r\n    console.log(productsNow);\r\n    var idx = productsNow.indexOf(item);\r\n    if (productsNow[idx].quantity > 1) {\r\n      productsNow[idx].quantity -= 1;\r\n      setProducts(productsNow);\r\n    } else {\r\n      setProducts(productsNow);\r\n    }\r\n    const jsonArray = JSON.stringify(productsNow);\r\n    hardcodeCart.changeInCart(idx, productsNow[idx]);\r\n    hardcodeCart.storeData(jsonArray);\r\n  };\r\n\r\n  onDel = (item) => {\r\n    const productsNow = [...products];\r\n    var idx = productsNow.indexOf(item);\r\n    productsNow.splice(idx, 1);\r\n    setProducts(productsNow);\r\n    const jsonArray = JSON.stringify(productsNow);\r\n    hardcodeCart.deleteCartItem(idx, jsonArray);\r\n  };\r\n\r\n  onButtonPress = (products) => {\r\n    if (products) {\r\n      if (products.length > 0) {\r\n        console.log(products);\r\n        navigation.navigate(routes.PAYMENT, products);\r\n      } else {\r\n        Alert.alert(\"OOPS!\", \"Cart is currently empty.\", [\r\n          {\r\n            text: \"Continue Shopping\",\r\n            onPress: () => navigation.navigate(routes.CATEGORIES),\r\n          },\r\n        ]);\r\n      }\r\n    } else {\r\n      Alert.alert(\"Sorry!\", \"Cart is currently empty.\", [\r\n        {\r\n          text: \"Continue Shopping\",\r\n          onPress: () => navigation.navigate(routes.CATEGORIES),\r\n        },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Screen style={styles.container}>\r\n      <View style={styles.wrapper}>\r\n        <FlatList\r\n          showsVerticalScrollIndicator={false}\r\n          data={products}\r\n          keyExtractor={(products) => products._id}\r\n          renderItem={({ item }) => (\r\n            <CartItemCard\r\n              title={item.productName}\r\n              subTitle={\"$\" + item.price}\r\n              type={item.type}\r\n              imageUrl={require(\"../assets/icon.png\")}\r\n              quantity={item.quantity}\r\n              onImagePress={() =>\r\n                navigation.navigate(routes.CART_DETAILS, item)\r\n              }\r\n              onDel={() => onDel(item)}\r\n              onAdd={() => onAdd(item)}\r\n              onSub={() => onSub(item)}\r\n            />\r\n          )}\r\n        />\r\n      </View>\r\n      <View style={styles.listContainer}>\r\n        <ListCartItem\r\n          title={totalQuantity + \" goods\"}\r\n          subTitle={\"Total $\" + totalPrice}\r\n        />\r\n        <ListButtonCartItem\r\n          title=\"Check Out\"\r\n          onPress={() => onButtonPress(products)}\r\n        />\r\n      </View>\r\n    </Screen>\r\n  );\r\n}\r\n\r\nexport default CartScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: colors.background,\r\n  },\r\n  listContainer: {\r\n    zIndex: 1,\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n  },\r\n  wrapper: {\r\n    backgroundColor: colors.white,\r\n    marginBottom: 120,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}