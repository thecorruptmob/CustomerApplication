{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport dayjs from \"dayjs\";\nvar prefix = \"cache\";\nvar expiryInMinutes = 5;\n\nvar store = function store(key, value) {\n  var item;\n  return _regeneratorRuntime.async(function store$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          item = {\n            value: value,\n            timestamp: Date.now()\n          };\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(prefix + key, JSON.stringify(item)));\n\n        case 4:\n          _context.next = 9;\n          break;\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};\n\nvar isExpired = function isExpired(item) {\n  var now = dayjs();\n  var storedTime = dayjs(item.timestamp);\n  return now.diff(storedTime, \"minute\") > expiryInMinutes;\n};\n\nvar get = function get(key) {\n  var value, item;\n  return _regeneratorRuntime.async(function get$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(prefix + key));\n\n        case 3:\n          value = _context2.sent;\n          item = JSON.parse(value);\n\n          if (item) {\n            _context2.next = 7;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", null);\n\n        case 7:\n          if (!isExpired(item)) {\n            _context2.next = 11;\n            break;\n          }\n\n          _context2.next = 10;\n          return _regeneratorRuntime.awrap(AsyncStorage.removeItem(prefix + key));\n\n        case 10:\n          return _context2.abrupt(\"return\", null);\n\n        case 11:\n          return _context2.abrupt(\"return\", item.value);\n\n        case 14:\n          _context2.prev = 14;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n\n        case 17:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 14]], Promise);\n};\n\nexport default {\n  store: store,\n  get: get\n};","map":{"version":3,"sources":["C:/Users/Dell XPS/Downloads/fypfypfyp/app/utility/cache.js"],"names":["dayjs","prefix","expiryInMinutes","store","key","value","item","timestamp","Date","now","AsyncStorage","setItem","JSON","stringify","console","log","isExpired","storedTime","diff","get","getItem","parse","removeItem"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,MAAM,GAAG,OAAf;AACA,IAAMC,eAAe,GAAG,CAAxB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAOC,GAAP,EAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEJC,UAAAA,IAFI,GAEG;AACXD,YAAAA,KAAK,EAALA,KADW;AAEXE,YAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL;AAFA,WAFH;AAAA;AAAA,2CAMJC,YAAY,CAACC,OAAb,CAAqBV,MAAM,GAAGG,GAA9B,EAAmCQ,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAnC,CANI;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQVQ,UAAAA,OAAO,CAACC,GAAR;;AARU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAd;;AAYA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACV,IAAD,EAAU;AAC1B,MAAMG,GAAG,GAAGT,KAAK,EAAjB;AACA,MAAMiB,UAAU,GAAGjB,KAAK,CAACM,IAAI,CAACC,SAAN,CAAxB;AACA,SAAOE,GAAG,CAACS,IAAJ,CAASD,UAAT,EAAqB,QAArB,IAAiCf,eAAxC;AACD,CAJD;;AAMA,IAAMiB,GAAG,GAAG,SAANA,GAAM,CAAOf,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEYM,YAAY,CAACU,OAAb,CAAqBnB,MAAM,GAAGG,GAA9B,CAFZ;;AAAA;AAEFC,UAAAA,KAFE;AAGFC,UAAAA,IAHE,GAGKM,IAAI,CAACS,KAAL,CAAWhB,KAAX,CAHL;;AAAA,cAKHC,IALG;AAAA;AAAA;AAAA;;AAAA,4CAKU,IALV;;AAAA;AAAA,eAOJU,SAAS,CAACV,IAAD,CAPL;AAAA;AAAA;AAAA;;AAAA;AAAA,2CASAI,YAAY,CAACY,UAAb,CAAwBrB,MAAM,GAAGG,GAAjC,CATA;;AAAA;AAAA,4CAUC,IAVD;;AAAA;AAAA,4CAaDE,IAAI,CAACD,KAbJ;;AAAA;AAAA;AAAA;AAeRS,UAAAA,OAAO,CAACC,GAAR;;AAfQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAZ;;AAmBA,eAAe;AACbZ,EAAAA,KAAK,EAALA,KADa;AAEbgB,EAAAA,GAAG,EAAHA;AAFa,CAAf","sourcesContent":["import { AsyncStorage } from \"react-native\";\nimport dayjs from \"dayjs\";\n\nconst prefix = \"cache\";\nconst expiryInMinutes = 5;\n\nconst store = async (key, value) => {\n  try {\n    const item = {\n      value,\n      timestamp: Date.now(),\n    };\n    await AsyncStorage.setItem(prefix + key, JSON.stringify(item));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst isExpired = (item) => {\n  const now = dayjs();\n  const storedTime = dayjs(item.timestamp);\n  return now.diff(storedTime, \"minute\") > expiryInMinutes;\n};\n\nconst get = async (key) => {\n  try {\n    const value = await AsyncStorage.getItem(prefix + key);\n    const item = JSON.parse(value);\n\n    if (!item) return null;\n\n    if (isExpired(item)) {\n      // Command Query Separation (CQS)\n      await AsyncStorage.removeItem(prefix + key);\n      return null;\n    }\n\n    return item.value;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default {\n  store,\n  get,\n};\n"]},"metadata":{},"sourceType":"module"}