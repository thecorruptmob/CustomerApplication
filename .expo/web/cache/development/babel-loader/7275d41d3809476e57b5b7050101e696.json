{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell XPS\\\\Downloads\\\\fypfypfyp\\\\app\\\\screens\\\\ListingsScreen.js\";\nimport React, { useState, useEffect } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ItemCard from \"../components/ItemCard\";\nimport routes from \"../navigation/routes\";\nimport navigation from \"../navigation/rootNavigation\";\nimport colors from \"../config/colors\";\nimport hardcodeCart from \"../hardcode/hardcodeCart\";\nimport listingApi from \"../api/listings\";\nimport CartScreen from \"./CartScreen\";\nimport Screen from \"../components/Screen\";\n\nvar _ = require(\"lodash\");\n\nfunction ListingsScreen(_ref) {\n  var route = _ref.route;\n  var id = route.params;\n  var getListingApi = useApi(listingApi.getListing);\n  useEffect(function () {\n    getListingApi.request();\n  }, []);\n  var filtered = getListingApi.data.filter(function (m) {\n    return m.subsubCategory._id === id;\n  });\n\n  var onAddButtonPress = function onAddButtonPress(item) {\n    var pro = _.pick(item, [\"_id\", \"image\", \"productName\", \"companyName\", \"price\", \"quantity\", \"type\", \"description\"]);\n\n    hardcodeCart.checkAlreadyAdded(pro);\n  };\n\n  console.log(getListingApi.data);\n  return React.createElement(Screen, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    showsVerticalScrollIndicator: false,\n    data: filtered,\n    keyExtractor: function keyExtractor(item) {\n      return item._id.toString();\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(ItemCard, {\n        title: item.productName,\n        subTitle: \"$\" + item.price,\n        type: item.type,\n        imageUrl: require(\"../assets/icon.png\"),\n        onButtonPress: function onButtonPress() {\n          return onAddButtonPress(item);\n        },\n        onPress: function onPress() {\n          return navigation.navigate(routes.LISTING_DETAILS, item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default ListingsScreen;\nvar styles = StyleSheet.create({\n  wrapper: {\n    backgroundColor: colors.white\n  },\n  container: {\n    flex: 1,\n    backgroundColor: colors.background\n  }\n});","map":{"version":3,"sources":["C:/Users/Dell XPS/Downloads/fypfypfyp/app/screens/ListingsScreen.js"],"names":["React","useState","useEffect","ItemCard","routes","navigation","colors","hardcodeCart","listingApi","CartScreen","Screen","_","require","ListingsScreen","route","id","params","getListingApi","useApi","getListing","request","filtered","data","filter","m","subsubCategory","_id","onAddButtonPress","item","pro","pick","checkAlreadyAdded","console","log","styles","container","wrapper","toString","productName","price","type","navigate","LISTING_DETAILS","StyleSheet","create","backgroundColor","white","flex","background"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAGA,OAAOC,QAAP;AACA,OAAOC,MAAP;AACA,OAAOC,UAAP;AACA,OAAOC,MAAP;AACA,OAAOC,YAAP;AACA,OAAOC,UAAP;AACA,OAAOC,UAAP;AACA,OAAOC,MAAP;;AAEA,IAAMC,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AAEA,SAASC,cAAT,OAAmC;AAAA,MAATC,KAAS,QAATA,KAAS;AACjC,MAAMC,EAAE,GAAGD,KAAK,CAACE,MAAjB;AAEA,MAAMC,aAAa,GAAGC,MAAM,CAACV,UAAU,CAACW,UAAZ,CAA5B;AAEAjB,EAAAA,SAAS,CAAC,YAAM;AACde,IAAAA,aAAa,CAACG,OAAd;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,MAAIC,QAAQ,GAAGJ,aAAa,CAACK,IAAd,CAAmBC,MAAnB,CAA0B,UAACC,CAAD;AAAA,WAAOA,CAAC,CAACC,cAAF,CAAiBC,GAAjB,KAAyBX,EAAhC;AAAA,GAA1B,CAAf;;AAEA,MAAMY,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,IAAD,EAAU;AACjC,QAAMC,GAAG,GAAGlB,CAAC,CAACmB,IAAF,CAAOF,IAAP,EAAa,CACvB,KADuB,EAEvB,OAFuB,EAGvB,aAHuB,EAIvB,aAJuB,EAKvB,OALuB,EAMvB,UANuB,EAOvB,MAPuB,EAQvB,aARuB,CAAb,CAAZ;;AAUArB,IAAAA,YAAY,CAACwB,iBAAb,CAA+BF,GAA/B;AACD,GAZD;;AAcAG,EAAAA,OAAO,CAACC,GAAR,CAAYhB,aAAa,CAACK,IAA1B;AAEA,SACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEY,MAAM,CAACC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,4BAA4B,EAAE,KADhC;AAEE,IAAA,IAAI,EAAEf,QAFR;AAGE,IAAA,YAAY,EAAE,sBAACO,IAAD;AAAA,aAAUA,IAAI,CAACF,GAAL,CAASW,QAAT,EAAV;AAAA,KAHhB;AAIE,IAAA,UAAU,EAAE;AAAA,UAAGT,IAAH,SAAGA,IAAH;AAAA,aACV,oBAAC,QAAD;AACE,QAAA,KAAK,EAAEA,IAAI,CAACU,WADd;AAEE,QAAA,QAAQ,EAAE,MAAMV,IAAI,CAACW,KAFvB;AAGE,QAAA,IAAI,EAAEX,IAAI,CAACY,IAHb;AAIE,QAAA,QAAQ,EAAE5B,OAAO,sBAJnB;AAKE,QAAA,aAAa,EAAE;AAAA,iBAAMe,gBAAgB,CAACC,IAAD,CAAtB;AAAA,SALjB;AAME,QAAA,OAAO,EAAE;AAAA,iBAAMvB,UAAU,CAACoC,QAAX,CAAoBrC,MAAM,CAACsC,eAA3B,EAA4Cd,IAA5C,CAAN;AAAA,SANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADU;AAAA,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAqBD;;AAED,eAAef,cAAf;AAEA,IAAMqB,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BR,EAAAA,OAAO,EAAE;AACPS,IAAAA,eAAe,EAAEvC,MAAM,CAACwC;AADjB,GADsB;AAI/BX,EAAAA,SAAS,EAAE;AACTY,IAAAA,IAAI,EAAE,CADG;AAETF,IAAAA,eAAe,EAAEvC,MAAM,CAAC0C;AAFf;AAJoB,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { FlatList, StyleSheet, View, Image } from \"react-native\";\n\nimport ItemCard from \"../components/ItemCard\";\nimport routes from \"../navigation/routes\";\nimport navigation from \"../navigation/rootNavigation\";\nimport colors from \"../config/colors\";\nimport hardcodeCart from \"../hardcode/hardcodeCart\";\nimport listingApi from \"../api/listings\";\nimport CartScreen from \"./CartScreen\";\nimport Screen from \"../components/Screen\";\n\nconst _ = require(\"lodash\");\n\nfunction ListingsScreen({ route }) {\n  const id = route.params;\n\n  const getListingApi = useApi(listingApi.getListing);\n\n  useEffect(() => {\n    getListingApi.request();\n  }, []);\n\n  let filtered = getListingApi.data.filter((m) => m.subsubCategory._id === id);\n\n  const onAddButtonPress = (item) => {\n    const pro = _.pick(item, [\n      \"_id\",\n      \"image\",\n      \"productName\",\n      \"companyName\",\n      \"price\",\n      \"quantity\",\n      \"type\",\n      \"description\",\n    ]);\n    hardcodeCart.checkAlreadyAdded(pro);\n  };\n\n  console.log(getListingApi.data);\n\n  return (\n    <Screen style={styles.container}>\n      <View style={styles.wrapper}>\n        <FlatList\n          showsVerticalScrollIndicator={false}\n          data={filtered}\n          keyExtractor={(item) => item._id.toString()}\n          renderItem={({ item }) => (\n            <ItemCard\n              title={item.productName}\n              subTitle={\"$\" + item.price}\n              type={item.type}\n              imageUrl={require(\"../assets/icon.png\")}\n              onButtonPress={() => onAddButtonPress(item)}\n              onPress={() => navigation.navigate(routes.LISTING_DETAILS, item)}\n            />\n          )}\n        />\n      </View>\n    </Screen>\n  );\n}\n\nexport default ListingsScreen;\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    backgroundColor: colors.white,\n  },\n  container: {\n    flex: 1,\n    backgroundColor: colors.background,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}